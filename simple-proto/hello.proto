// 编译命令,编译后
// protoc -I ./ --go_out=plugins=grpc:../simple-proto-out/hello ./*.proto

// 使用的协议版本,可以选proto3或proto2
syntax = "proto3";

package hello; // 生成代码后的包名，如果不指定包名，可以在protoc编译时使用import_path强制指定

// go代码的包名全路径,其中分号前是路径,分号后是包名,也可以直接使用`app/services/hello2`
// 如果定义了go_package,生成后的go包名以此为准，package参数就无效了
// 此参数编译后会在当前目录下生成app/services/hello.pb.go
option go_package = "hello";

// 引入的其它proto包(其它proto包必须有相关说明)
import "google/protobuf/timestamp.proto";

// 服务定义
service Hello {
    rpc SayHello (HelloRequest) returns (HelloReply);
}

// 定义Client发起请求参数
message HelloRequest {
    repeated
    string req = 1; // 消息中的参数序号
}

// 定义Server返回参数
message HelloReply {
    string resp = 1;
    google.protobuf.Timestamp last_update = 2;
}